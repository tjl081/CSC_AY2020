
@model CSC_AY2020_Task6_new.Models.RegistrationModel

@{
    ViewBag.Title = "Stripe Tutorial";
}


<h2>Stripe Charge Example with Stripe.js</h2>



<div>
    <h4>Stripe Charge Example</h4>
    <hr />
    @*<dl class="dl-horizontal">
            <dt>
                <label for="txtCardNumber">Card Number *</label>
            </dt>



            <dd>
                <input type="text" id="txtCardNumber" value="4242424242424242" />
            </dd>



            <dt>
                <label for="txtCvc">Cvc *</label>
            </dt>



            <dd>
                <input type="text" id="txtCvc" value="987" />
            </dd>



            <dt>
                <label for="txtExpiryMonth">Expiry Month (MM) *</label>
            </dt>



            <dd>
                <input type="text" id="txtExpiryMonth" value="01" />
            </dd>



            <dt>
                <label for="txtExpiryYear">Expiry Year (YYYY) *</label>)
            </dt>



            <dd>
                <input type="text" id="txtExpiryYear" value="2050" />
            </dd>
        </dl>*@
    <!--<form id="payment-form" style="width: 50%; margin-bottom: 40px;">
        <div class="form-row">
            <label for="card-element">
                Credit or debit card
            </label>
            <div id="card-element">-->
    <!-- a Stripe Element will be inserted here. -->
    <!--</div>-->
    <!-- Used to display form errors -->
    <!--<div id="card-errors" role="alert"></div>
        </div>
    </form>-->
</div>
@*using (Html.BeginForm("Charge", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "frmCharge" }))*@
@using (Html.BeginForm("Charge", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, false, new { @class = "form-horizontal", role = "form", id = "frmCharge" }))
{
@Html.AntiForgeryToken()
<dl class="dl-horizontal">
<dt>
@Html.DisplayNameFor(model => model.Name)
</dt>



<dd>
@Html.TextBoxFor(model => model.Name, new { id = "txtName" })
</dd>


<dt>
@Html.DisplayName("Phone with Prefix")
</dt>


<dd>
@Html.TextBoxFor(model => model.Phone, new { id = "txtPhone" })
</dd>

<dt>
@Html.DisplayNameFor(model => model.Email)
</dt>

<dd>
@Html.TextBoxFor(model => model.Email, new { id = "txtEmail" })
</dd>

<dt>
@Html.DisplayNameFor(model => model.AddressLine1)
</dt>



<dd>
@Html.TextBoxFor(model => model.AddressLine1, new { id = "txtAddress1" })
</dd>



<dt>
@Html.DisplayNameFor(model => model.AddressLine2)
</dt>



<dd>
@Html.TextBoxFor(model => model.AddressLine2, new { id = "txtAddress2" })
</dd>



<dt>
@Html.DisplayNameFor(model => model.AddressCity)
</dt>



<dd>
@Html.TextBoxFor(model => model.AddressCity, new { id = "txtCity" })
</dd>



<dt>
@Html.DisplayNameFor(model => model.AddressPostcode)
</dt>



<dd>
@Html.TextBoxFor(model => model.AddressPostcode, new { id = "txtPostcode" })
</dd>



<dt>
@Html.DisplayNameFor(model => model.AddressCountry)
</dt>



<dd>
@Html.TextBoxFor(model => model.AddressCountry, new { id = "txtCountry" })
</dd>
</dl>
<p>
@*@Html.HiddenFor(model => model.Token, new { id = "hdnToken" })
    @Html.HiddenFor(model => model.Token, new { id = "txtCardNumber" })
    @Html.HiddenFor(model => model.Token, new { id = "txtCvc" })
    @Html.HiddenFor(model => model.Token, new { id = "txtExpiryMonth" })
    @Html.HiddenFor(model => model.Token, new { id = "txtExpiryYear" })*@

@Html.ActionLink("Register Details", "Charge", "Home", null, new { id = "btnRegister" })
    </p>
}

@section Scripts {
    <script type="text/javascript" src="https://js.stripe.com/v2/"></script>
    <script type="text/javascript" src="https://js.stripe.com/v3/"></script>

    <script type="text/javascript">

        $('document').ready(function () {
            Stripe.setPublishableKey('pk_test_51I2bbHBYTNT0yLeeYssT9JQ3142VZbZhwXEUT8WpkItAX2dNYwQxX6Hao76QQuWGiQ57eL95Su8XgqtVRfd6TFLE00StsUPkvK');
            //var elements = stripe.elements();
            //var card = elements.create('card',{
            //    hidePostalCode: true
            //});
            //// Add an instance of the card UI component into the `card-element` <div>
            //card.mount('#card-element');


            $('#btnRegister').on('click', function (e) {
                e.preventDefault();
                e.stopPropagation();

                var $form = $('#frmCharge');
                $form.get(0).submit();
                //Stripe.card.createToken({
                //    number: $('#txtCardNumber').val(),
                //    cvc: $('#txtCvc').val(),
                //    exp_month: $('#txtExpiryMonth').val(),
                //    exp_year: $('#txtExpiryYear').val()
                //}, stripeResponseHandler);
            });


        });
                    //    function stripeResponseHandler(status, response) {
                    //        var $form = $('#frmCharge');

                    //        if (response.error) {
                    //            // Show the errors on the form
                    //            alert(response.error.message);
                    //        } else {
                    //            // response contains id and card, which contains additional card details
                    //            var token = response.id;
                    //            // Insert the token into the form so it gets submitted to the server
                    //            $('#hdnToken').val(token);
                    //            // and submit

                    //            $form.get(0).submit();
                    //        }
                    //    }
                    //});
    </script>
}


